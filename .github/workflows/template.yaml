name: Check Template

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  setup:
    name: Template generation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "{{cookiecutter.python_version}}"
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install invoke
          invoke requirements
          pip list

      - name: Execute template
        run: |
          invoke template --project-manager=pip
          invoke template --project-manager=uv

      - name: Generated tree structure
        run: |
          tree -a pip_repo
          tree -a uv_repo

      - name: Upload generated templates
        uses: actions/upload-artifact@v4
        with:
          name: generated-template
          path: |
            pip_repo
            uv_repo
          include-hidden-files: true

  pip-project:
    name: Project using pip
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download generated template
        uses: actions/download-artifact@v4
        with:
          name: generated-template
          path: pip_repo

      - name: Artifact structure
        run: tree -a pip_repo

      - name: Install conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: true
          activate-environment: ""

      - name: Install project dependencies
        run: |
          cd pip_repo
          pip install invoke
          invoke create-environment
          invoke requirements
          invoke dev-requirements
        env:
          TERM: xterm

      - name: List all project commands
        run: |
          cd pip_repo
          invoke --list

      - name: Run project commands
        run: |
          cd pip_repo
          invoke preprocess-data
          invoke train
          invoke test
        env:
          TERM: xterm

      - name: Build documentation
        run: |
          cd pip_repo
          invoke build-docs
        env:
          TERM: xterm

      - name: Build dockerfiles
        run: |
          cd pip_repo
          invoke docker-build
        env:
          TERM: xterm

      - name: Check devcontainer
        run: |
          cd pip_repo
          npx @devcontainers/cli build --workspace-folder .
          npx @devcontainers/cli up --workspace-folder .
        env:
          TERM: xterm

  uv-project:
    name: Project using uv
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download generated template
        uses: actions/download-artifact@v4
        with:
          name: generated-template-advance
          path: uv_repo

      - name: Artifact structure
        run: tree -a uv_repo

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install project dependencies
        run: |
          cd uv_repo
          uv sync --all-extras --dev

      - name: List all project commands
        run: |
          cd uv_repo
          uv run invoke --list

      - name: Run project commands
        run: |
          cd uv_repo
          uv run invoke preprocess-data
          uv run invoke train
          uv run invoke test
        env:
          TERM: xterm

      - name: Build documentation
        run: |
          cd uv_repo
          uv run invoke build-docs
        env:
          TERM: xterm

      - name: Build dockerfiles
        run: |
          cd uv_repo
          uv run invoke docker-build
        env:
          TERM: xterm

      - name: Check devcontainer
        run: |
          cd uv_repo
          npx @devcontainers/cli build --workspace-folder .
          npx @devcontainers/cli up --workspace-folder .
        env:
          TERM: xterm
